var l=Object.defineProperty;var i=(c,e,t)=>e in c?l(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var n=(c,e,t)=>(i(c,typeof e!="symbol"?e+"":e,t),t);class k{constructor(e){n(this,"eventStack",{});n(this,"state",null);Object.keys(e).forEach(t=>{this.eventStack[t]={value:e[t],callBacks:[]}}),this.state=new Proxy(e,{get:(t,s)=>t[s],set:(t,s,a)=>(t[s]=a,this.eventStack[s].value=a,this.eventStack[s].callBacks.length&&this.eventStack[s].callBacks.forEach(h=>{h(a)}),!0)})}on(e,t){this.eventStack[e].callBacks.push(t),t(this.eventStack[e].value)}commit(e,t){this.state[e]=t}}const u=c=>new k(c);export{u as c};
